// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GIO {
  public static partial class File
  {
    static readonly string __ServiceName = "GIO.File";

    static readonly grpc::Marshaller<global::GIO.ReadRequest> __Marshaller_GIO_ReadRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GIO.ReadRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GIO.ReadResponse> __Marshaller_GIO_ReadResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GIO.ReadResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GIO.WriteRequest> __Marshaller_GIO_WriteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GIO.WriteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GIO.WriteResponse> __Marshaller_GIO_WriteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GIO.WriteResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GIO.ReadRequest, global::GIO.ReadResponse> __Method_ReadAllBytes = new grpc::Method<global::GIO.ReadRequest, global::GIO.ReadResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadAllBytes",
        __Marshaller_GIO_ReadRequest,
        __Marshaller_GIO_ReadResponse);

    static readonly grpc::Method<global::GIO.WriteRequest, global::GIO.WriteResponse> __Method_WriteAllBytes = new grpc::Method<global::GIO.WriteRequest, global::GIO.WriteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "WriteAllBytes",
        __Marshaller_GIO_WriteRequest,
        __Marshaller_GIO_WriteResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GIO.IoReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of File</summary>
    public abstract partial class FileBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GIO.ReadResponse> ReadAllBytes(global::GIO.ReadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GIO.WriteResponse> WriteAllBytes(global::GIO.WriteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for File</summary>
    public partial class FileClient : grpc::ClientBase<FileClient>
    {
      /// <summary>Creates a new client for File</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FileClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for File that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FileClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FileClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FileClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GIO.ReadResponse ReadAllBytes(global::GIO.ReadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadAllBytes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GIO.ReadResponse ReadAllBytes(global::GIO.ReadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadAllBytes, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GIO.ReadResponse> ReadAllBytesAsync(global::GIO.ReadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadAllBytesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GIO.ReadResponse> ReadAllBytesAsync(global::GIO.ReadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadAllBytes, null, options, request);
      }
      public virtual global::GIO.WriteResponse WriteAllBytes(global::GIO.WriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WriteAllBytes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GIO.WriteResponse WriteAllBytes(global::GIO.WriteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_WriteAllBytes, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GIO.WriteResponse> WriteAllBytesAsync(global::GIO.WriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WriteAllBytesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GIO.WriteResponse> WriteAllBytesAsync(global::GIO.WriteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_WriteAllBytes, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FileClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FileClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FileBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ReadAllBytes, serviceImpl.ReadAllBytes)
          .AddMethod(__Method_WriteAllBytes, serviceImpl.WriteAllBytes).Build();
    }

  }
}
#endregion
